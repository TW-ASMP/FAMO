@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix famo: <http://ontology.eil.utoronto.ca/FAMO/famo/>.
@prefix famo_shacl: <http://ontology.eil.utoronto.ca/FAMO/famo_shacl/>.
@prefix famo_app: <http://ontology.eil.utoronto.ca/FAMO/famo_hub_application/>.
@prefix famo_assets: <http://ontology.eil.utoronto.ca/FAMO/assets/>.
@prefix ex: <http://example.com/data/>.
@prefix change: <https://standards.iso.org/iso-iec/5087/-1/ed-1/en/ontology/Change/>.

#working shacl file to test constraints identified in https://tw-docs.atlassian.net/browse/FAMO-13

#R1a: an entity (role) may not have more than one parent (#hierarchy)
#R3a: a role cannot be the ancestor of itself (there may not be a loop in the hierarchy - the hierarchy must be a DAG. (#hierarchy))
famo_shacl:r1a-role a sh:NodeShape;
	sh:targetClass famo:Role;
	sh:property famo_shacl:r1a-subRole;
	sh:property famo_shacl:r3-subrole_irreflexive.
	
famo_shacl:r1a-subRole a sh:PropertyShape;
	sh:path famo:subRoleOf;
	sh:description "An Role may not have more than one parent";
	sh:maxCount 1.
	
famo_shacl:r3-subrole_irreflexive a sh:PropertyShape;
	sh:path famo:transSubRoleOf;
	sh:disjoint [sh:inversePath famo:transSubRoleOf];
	sh:description "A Role may not be an ancestor of itself (no loops in the hierarchy)".
	

#R1b: a record may not represent an entity as *currently* having more than one parent
#R1b-1
famo_shacl:r1b a sh:NodeShape;
	sh:targetClass famo:RoleInclusionProperty;
	sh:property famo_shacl:r1b1-object.

famo_shacl:r1b1-object a sh:PropertyShape;
	sh:path famo:objectIsRepresentedBy;
	sh:description "A RoleInclusionProperty may not have more than one object (parent role record)";
	sh:maxCount 1.
	
#R1b-2
famo_shacl:r1b a sh:NodeShape;
	sh:targetClass famo:Record;
	sh:property famo_shacl:r1b2-subject;
	sh:property famo_shacl:ancestor_irreflexive.
	
famo_shacl:r1b2-subject a sh:PropertyShape;
		sh:path famo:representsSubjectOf;
		sh:class famo:RoleInclusionProperty;
		sh:class famo:CurrentPropertyManifestation;
		sh:description "A Record may not be the subject of more than one (current) RoleInclusionProperty";
		sh:maxCount 1.

#R3b: a record may not represent a role as *currently* having itself as an ancestor
famo_shacl:r3b-ancestor_irreflexive a sh:PropertyShape;
	sh:path famo_app:representsAncestorRoleOfRecord;
	sh:disjoint [sh:inversePath famo_app:representsAncestorRoleOfRecord];
	sh:description "A Record may not represent a Role as the ancestor of itself (no loops in the record hierarchy)".
		
#R2
famo_shacl:r2 a sh:NodeShape;
	sh:targetClass famo:Role;
	sh:targetClass [sh:not famo:FacilityRole]; # for all Roles that are not Facility Roles (exact class name tbd)
	sh:property famo_shacl:r2-subRole.
	
famo_shacl:r1b2-subject a sh:PropertyShape;
		sh:path famo:subRoleOf;
		sh:description "All Roles (except Facility level Roles) must have a parent, i.e. be a subRole of some role";
		sh:minCount 1.
		
#R4a: every role number (entity number) must be unique
famo_shacl:r4a-unique_enum a sh:NodeShape;
	sh:targetObjectsOf famo:hasEntityNumber;
	sh:property [
		sh:path 	[sh:inversePath famo:hasEntityNumber];
		sh:maxCount 1;
		].
	
#R4b: every role number *currently* represented in a record must be unique *in a particular datasystem*
#we can do this with a SPARQL embedding - but is there another way?
famo_shacl:r4b-unique_enum a sh:NodeShape;
	sh:targetClass a famo:EntityNumberProperty;
	sh:targetClass a famo:CurrentPropertyManifestation;
	sh:sparql [
		a sh:SPARQLConstraint ;   # This triple is optional
		sh:message "The entity number currently represented by a role record must be unique in a given data system." ;
    sh:select """
				PREFIX famo: <http://ontology.eil.utoronto.ca/FAMO/famo/>
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
        SELECT DISTINCT ?this ?value ?other WHERE {
            ?this famo:hasValue ?value .
            ?other famo:hasValue ?value .
            FILTER (?other != ?this) .
            ?other a famo:EntityNumberProperty;
								a famo:CurrentPropertyManifestation;
								famo:instantiatedIn ?ds.
            ?this a famo:EntityNumberProperty;
								a famo:CurrentPropertyManifestation;
								famo:instantiatedIn ?ds.
        }
        """		
		].
	
#R5: all role numbers must contain the character “-”
famo_shacl:r5-enumregex a sh:NodeShape;
	sh:targetClass a famo:EntityNumberProperty;
	sh:property famo_shacl:hasValue_enum.
	
famo_shacl:hasValue_enum a sh:PropertyShape;
	sh:path famo:hasValue;
	sh:pattern "-".
	